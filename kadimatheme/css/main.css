.btn {
    max-height: 33px;
}

.nav-theme {
    display: flex;
    justify-content: flex-end;
}
.nav-theme div {
    display: flex;
    align-items: flex-end;
    flex-direction: column;
}
.navbar-nav .nav-link {
    text-decoration: none;
    /* color: black !important; */
}
.navbar-nav .nav-link:hover {
    opacity: 0.7;
}

.theme--home header {
    display: flex;
    align-items: center;
    min-height: 45vh;
    padding: 0 6%;
    background-color: #6200ee;
}

.theme--home header h1 {
    font-size: calc(5rem + 2vw);
    font-weight: 300;
}

.theme--home header h2 {
    font-size: calc(2rem + 2vw);
}

.theme--home header h1,
.theme--home header h2 {
    color: #fff;
}

.theme-nav > * {
    font-size: 1.2rem;
}

.page-footer .glass .container-fluid {
    margin-bottom: 30px;
    margin-top: 30px;
}

.footer-copyright {
    padding: 10px 0 10px 0;
    background-color: #212530;
    color: #c9c7ce;
    font-size: 1.2rem;
}

.page-footer .glass {
    background-color: rgba(150, 150, 150, 0.6);
    padding-top: 10px;
}

.container .row {
    margin-bottom: 3px;
}

.input-email {
    z-index: 1;
    transform: translate(0, -50%);
    margin: auto;
    text-align: center;
    background-color: #f9f9f9;
    padding: 5px 10px;
}

.input-email h3 {
    text-align: left;
    margin-bottom: 10px;
    padding: 10px;
    font-size: 20px;
}

.input-email input {
    font-size: 15px;
    min-height: 33px;
}

.input-email .capture-email-button {
    font-size: 16px;
}

.elevation {
    -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.19),
        0 6px 6px rgba(0, 0, 0, 0.23);
    -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.19),
        0 6px 6px rgba(0, 0, 0, 0.23);
    -ms-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.19),
        0 6px 6px rgba(0, 0, 0, 0.23);
    -o-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

.posts-container {
    width: 75%;
    margin: auto;
    padding: 5px;
}

.posts-container .post {
    display: flex;
    align-items: center;
    max-width: 500px;
    min-height: 130px;
    margin-bottom: 25px;
}
.posts-container .post span {
    font-size: 1.4rem;
}
.posts-container .post .post-title {
    font-size: 2.6rem;
    line-height: 23px;
}
.posts-container .post p {
    font-size: 1.2rem;
}

.posts-container .post img {
    max-width: 120px;
    min-width: 120px;
    min-height: 150px;
    max-height: 150px;
    object-fit: cover;
}

.posts-container .post div {
    padding-left: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.footer-email {
    margin-top: 10px;
}

.footer-email input {
    padding: 15px;
    font-size: 1.4rem;
}
.footer-email div button {
    font-size: 1.4rem;
}

.theme--content div {
    padding-top: 10px;
}

.theme--content-title {
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;

    width: 75%;
    margin: auto;
    padding: 5px;
}

.theme--content-title h2 {
    font-size: calc(3rem + 3vw);
}

@media screen and (max-width: 540px) {
    .posts-container {
        width: 90%;
    }
}

.theme--content header {
    height: 30vh;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
}

/*------------ Parallax ------------*/
.wrapper {
    /* O elemento precisa ter uma altura definida para o efeito
    funcionar.
       100vh significa 100% da altura da view.
    */
    height: 100vh;

    /* O tamanho das imagens irá criar uma barra de rolagem
    horizontal. Iremos desativar isso */
    overflow-x: hidden;

    /* A propriedade perspective indica a "distância" entre o
    usuário e o plano Z.
    Quanto maior o valor, mais perto o elemento estará do usuário.
    Se for um valor negativo,
    mais distante esse elemento estará.
    */
    perspective: 2px;

    /* O transform-style indica se os elementos filhos devem ser
    transformados em um plano 2D ou 3D.
    O valor preserve-3d indica que os elementos devem seguir o
    espaço 3D indicado.
    */
    transform-style: preserve-3d;
}

.section {
    /* Indicamos "relative" para depois podermos
    posicionar os elementos filhos com "absolute" */
    position: relative;

    /* Indicamos uma altura para a nossa seção. O valor não
    importa muito.
    Para garantir um bom efeito, coloquei também uma altura
    mínima de 700px;
    */
    height: 100vh;
    min-height: 700px;

    /* Para manter a transformação em espaço 3D, indicamos o mesmo
    valor do elemento pai (preserve-3d).
    Para não precisar repetir o valor "preserve-3d", você pode usar
    o valor "inherit", que fará
    com que ele pegue o valor do elemento pai.
    */
    transform-style: inherit;
}

.section::before {
    /* Aqui nós iremos configurar a imagem que irá aparecer no fundo
    da seção.
    Como vimos, o Parallax precisa de elementos diferentes, então
    não daria certo se colocássemos o fundo diretamente na
    <section>. Então criaremos um pseudo-elemento para isso.
    */

    /* Isso servirá para que o pseudo-elemento possua as mesmas
    dimensões do elemento <section> */
    content: ' ';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    /* O z-index negativo irá garantir que a imagem não fique por
    cima de outros elementos */
    z-index: -1;

    /* Aqui estamos fazendo com que a imagem de fundo cubra todo o
    elemento */
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;

    /* Aqui está a brincadeira. Lembra que o nosso "wrapper" está
    mais próximo do usuário?
    Aqui nós faremos com que o nosso pseudo-elemento, que está com
    a imagem de fundo, fique mais longe do usuário. Para isso,
    basta passar um valor negativo para "translateZ()".

    Como a imagem irá para longe do usuário, ela parecerá menor.
    Então usamos o "scale()" para aumentar o tamanho da imagem.

    Como o elemento estará mais longe do usuário, ele irá se mover
    mais lentamente do que os elementos mais próximos conforme
    a gente role a página.
    */
    transform: translateZ(-1px) scale(1.5);
}

.text {
    /* Essa classe, como dito antes, é só para o nosso conteúdo.
    Sinta-se livre para criar o que quiser.
    */
    position: absolute;
    top: 25%;
    width: 100%;
    padding: 20px 0;
    background-color: rgba(255, 255, 255, 0.5);

    color: white;
    text-shadow: 0 0 5px #000;
    font-size: 20px;
    text-align: center;
}

/*------------------------*/
